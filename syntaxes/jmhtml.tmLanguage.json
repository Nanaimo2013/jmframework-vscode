{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "JMF HTML",
  "patterns": [
    { "include": "#comments" },
    { "include": "#doctype" },
    { "include": "#tags" },
    { "include": "#jmf-expressions" },
    { "include": "#jmf-conditionals" },
    { "include": "#jmf-components" },
    { "include": "#entities" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.block.html",
          "begin": "<!--",
          "end": "-->",
          "captures": {
            "0": { "name": "punctuation.definition.comment.html" }
          }
        }
      ]
    },
    "doctype": {
      "name": "meta.tag.sgml.doctype.html",
      "begin": "<!(?=DOCTYPE|doctype)",
      "end": ">",
      "captures": {
        "0": { "name": "punctuation.definition.tag.html" }
      },
      "patterns": [
        {
          "name": "entity.name.tag.doctype.html",
          "match": "DOCTYPE|doctype"
        },
        {
          "name": "string.quoted.single.html",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "string.quoted.double.html",
          "begin": "\"",
          "end": "\""
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "constant.character.entity.html",
          "match": "&(?:[a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+);"
        }
      ]
    },
    "tags": {
      "patterns": [
        { "include": "#opening-tag" },
        { "include": "#closing-tag" },
        { "include": "#self-closing-tag" }
      ]
    },
    "opening-tag": {
      "name": "meta.tag.open.html",
      "begin": "<(?![/!])",
      "end": ">",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.tag.begin.html" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.tag.end.html" }
      },
      "patterns": [
        { "include": "#tag-name" },
        { "include": "#tag-attributes" }
      ]
    },
    "closing-tag": {
      "name": "meta.tag.close.html",
      "match": "</([a-zA-Z][a-zA-Z0-9:-]*)\\s*>",
      "captures": {
        "0": { "name": "punctuation.definition.tag.html" },
        "1": { "name": "entity.name.tag.html" }
      }
    },
    "self-closing-tag": {
      "name": "meta.tag.self-close.html",
      "begin": "<(?![/!])",
      "end": "/>",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.tag.begin.html" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.tag.end.html" }
      },
      "patterns": [
        { "include": "#tag-name" },
        { "include": "#tag-attributes" }
      ]
    },
    "tag-name": {
      "patterns": [
        {
          "name": "entity.name.tag.html",
          "match": "[a-zA-Z][a-zA-Z0-9:-]*"
        }
      ]
    },
    "tag-attributes": {
      "patterns": [
        { "include": "#jmf-attributes" },
        { "include": "#standard-attributes" }
      ]
    },
    "standard-attributes": {
      "patterns": [
        {
          "name": "entity.other.attribute-name.html",
          "match": "\\b([a-zA-Z\\-:_][a-zA-Z0-9\\-:_]*)\\b"
        },
        {
          "name": "string.quoted.double.html",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "include": "#entities" }
          ]
        },
        {
          "name": "string.quoted.single.html",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "include": "#entities" }
          ]
        }
      ]
    },
    "jmf-attributes": {
      "patterns": [
        {
          "name": "entity.other.attribute-name.jmf.html",
          "match": "@[a-zA-Z][a-zA-Z0-9\\-:_]*"
        },
        {
          "name": "entity.other.attribute-name.binding.jmf.html",
          "match": "\\[([a-zA-Z][a-zA-Z0-9\\-:_]*)\\]"
        },
        {
          "name": "entity.other.attribute-name.event.jmf.html",
          "match": "\\(([a-zA-Z][a-zA-Z0-9\\-:_]*)\\)"
        }
      ]
    },
    "jmf-expressions": {
      "patterns": [
        {
          "name": "meta.embedded.expression.jmf",
          "begin": "\\${",
          "end": "}",
          "beginCaptures": {
            "0": { "name": "punctuation.definition.template-expression.begin.jmf" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.template-expression.end.jmf" }
          },
          "patterns": [
            { "include": "#strings" },
            { "include": "#numbers" },
            { "include": "#operators" },
            { "include": "#variables" },
            { "include": "#function-calls" }
          ]
        }
      ]
    },
    "jmf-conditionals": {
      "patterns": [
        {
          "name": "meta.conditional.jmf.html",
          "begin": "<\\s*(if|else-if|else)\\s+([^>]+)?\\s*>",
          "end": "<\\s*/\\s*(if|else-if|else)\\s*>",
          "beginCaptures": {
            "1": { "name": "keyword.control.conditional.jmf" },
            "2": { "name": "meta.embedded.expression.jmf" }
          },
          "endCaptures": {
            "1": { "name": "keyword.control.conditional.jmf" }
          },
          "patterns": [
            { "include": "$self" }
          ]
        }
      ]
    },
    "jmf-components": {
      "patterns": [
        {
          "name": "meta.tag.component.jmf.html",
          "begin": "<([A-Z][a-zA-Z0-9]*)",
          "end": ">|/>",
          "beginCaptures": {
            "1": { "name": "entity.name.tag.component.jmf" }
          },
          "patterns": [
            { "include": "#tag-attributes" }
          ]
        },
        {
          "name": "meta.tag.component.end.jmf.html",
          "match": "</([A-Z][a-zA-Z0-9]*)>",
          "captures": {
            "1": { "name": "entity.name.tag.component.jmf" }
          }
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.jmf",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.jmf", "match": "\\\\." }
          ]
        },
        {
          "name": "string.quoted.single.jmf",
          "begin": "'",
          "end": "'",
          "patterns": [
            { "name": "constant.character.escape.jmf", "match": "\\\\." }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.jmf",
          "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.jmf",
          "match": "\\+|-|\\*|/|%|<=|>=|<|>|==|===|!=|!==|&&|\\|\\||!|\\?|\\:|\\?\\.|\\.\\.\\."
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.jmf",
          "match": "\\b[a-zA-Z_$][a-zA-Z0-9_$]*\\b"
        }
      ]
    },
    "function-calls": {
      "patterns": [
        {
          "name": "meta.function-call.jmf",
          "begin": "\\b([a-zA-Z_$][a-zA-Z0-9_$]*)\\s*(\\()",
          "end": "\\)",
          "beginCaptures": {
            "1": { "name": "entity.name.function.jmf" },
            "2": { "name": "punctuation.definition.parameters.begin.jmf" }
          },
          "endCaptures": {
            "0": { "name": "punctuation.definition.parameters.end.jmf" }
          },
          "patterns": [
            { "include": "#strings" },
            { "include": "#numbers" },
            { "include": "#operators" },
            { "include": "#variables" },
            { "include": "#function-calls" }
          ]
        }
      ]
    }
  },
  "scopeName": "source.jmhtml"
} 